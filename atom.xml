<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>弦上的梦</title>
  
  <subtitle>树木是大地对星空的渴望</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://janche.github.io/"/>
  <updated>2019-04-26T03:30:36.496Z</updated>
  <id>https://janche.github.io/</id>
  
  <author>
    <name>Janche</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>springmvc-validator</title>
    <link href="https://janche.github.io/2019/04/23/springmvc-validator/"/>
    <id>https://janche.github.io/2019/04/23/springmvc-validator/</id>
    <published>2019-04-23T14:04:55.000Z</published>
    <updated>2019-04-26T03:30:36.496Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring-Boot-数据校验框架-springmvc-validator-使用说明"><a href="#Spring-Boot-数据校验框架-springmvc-validator-使用说明" class="headerlink" title="Spring Boot 数据校验框架 springmvc-validator 使用说明"></a>Spring Boot 数据校验框架 springmvc-validator 使用说明</h1><h2 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h2><blockquote><p><strong>依赖</strong></p></blockquote><p><code>hibernate-validation</code>,<code>validation-api</code>已经被添加在<code>spring-boot-starter-web</code>内，所以不需要添加依赖</p><a id="more"></a><blockquote><p><strong>配置</strong></p></blockquote><p>SpringMVC的<code>javabean</code> 配置方式如下所示</p><blockquote><p>注意：快速失败方式才需要配置下面的，默认可以不用配置。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Validator <span class="title">validator</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ValidatorFactory validatorFactory = Validation.byProvider( HibernateValidator.class )</span><br><span class="line">            .configure()</span><br><span class="line">            .addProperty( <span class="string">"hibernate.validator.fail_fast"</span>, <span class="string">"true"</span> ) <span class="comment">//为true时代表快速失败模式，false则为全部校验后再结束。</span></span><br><span class="line">            .buildValidatorFactory();</span><br><span class="line">    Validator validator = validatorFactory.getValidator();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> validator;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="两种常规校验"><a href="#两种常规校验" class="headerlink" title="两种常规校验"></a>两种常规校验</h3><blockquote><ol><li>在<code>Controller</code>类上加入<code>@Validated</code>注解</li><li>在方法参数中添加相应的注解</li><li>注意：若方法参数上没有<code>@Validated</code>注解，则需要在类上加<code>@Validated</code>注解</li></ol></blockquote><blockquote><p>参数为实体类对象<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SysRole</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@NotNull</span>(message = <span class="string">"角色名称不能为空"</span>)</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Size</span>(min = <span class="number">6</span>, max = <span class="number">20</span>, message = <span class="string">"描述必须在6-20个字符之间"</span>)</span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"create_time"</span>)</span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/demo"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo</span><span class="params">(@Valid SysRole sysRole, BindingResult result)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (result.hasErrors()) &#123;</span><br><span class="line">     List&lt;ObjectError&gt; allErrors = result.getAllErrors();</span><br><span class="line">     StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">     <span class="keyword">for</span> (ObjectError objectError : allErrors) &#123;</span><br><span class="line">         sb.append(objectError.getDefaultMessage() + <span class="string">";"</span>);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">throw</span> <span class="keyword">new</span> ServiceException(sb.toString());  <span class="comment">// 此处一定要抛出异常，否则校验框架不起作用。</span></span><br><span class="line"> &#125;</span><br><span class="line">    <span class="comment">//do something  </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>参数为单个字段<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/demo"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo2</span><span class="params">(@Min(value = <span class="number">1</span>, message = <span class="string">"班级最小只能1"</span>)</span></span></span><br><span class="line"><span class="function">                   @<span class="title">Max</span><span class="params">(value = <span class="number">99</span>, message = <span class="string">"班级最大只能99"</span>)</span></span></span><br><span class="line"><span class="function">                   @<span class="title">RequestParam</span><span class="params">(name = <span class="string">"classroom"</span>, required = <span class="keyword">true</span>)</span> <span class="keyword">int</span> classroom) </span>&#123;</span><br><span class="line">                 <span class="comment">//do something  </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="分组校验"><a href="#分组校验" class="headerlink" title="分组校验"></a>分组校验</h3><blockquote><p><strong>1.新建两个接口</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RoleUpdate</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RoleAdd</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p><strong>2.实体类中给字段加入分组</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SysRole</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span>(strategy = GenerationType.IDENTITY)</span><br><span class="line">    <span class="meta">@NotEmpty</span>(message = <span class="string">"角色ID不能为空"</span>, groups = &#123;RoleUpdate.class&#125;)</span><br><span class="line">    <span class="keyword">protected</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotEmpty</span>(message = <span class="string">"角色名称不能为空"</span>, groups = &#123;RoleAdd.class&#125;)</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p><strong>3.Controller中的使用</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/sys/role"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SysRoleController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/add"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestResult <span class="title">add</span><span class="params">(@Validated(&#123;RoleAdd.class&#125;)</span> SysRole sysRole, BindingResult result)</span>&#123;</span><br><span class="line">        CoreUtil.validationHandler(result);</span><br><span class="line">        sysRoleService.addRole(sysRole);</span><br><span class="line">        <span class="keyword">return</span> ResultGenerator.genSuccessResult();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/update"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestResult <span class="title">update</span><span class="params">(@Validated(&#123;RoleUpdate.class&#125;)</span> SysRole sysRole, BindingResult result) </span>&#123;</span><br><span class="line">        CoreUtil.validationHandler(result);</span><br><span class="line">        sysRoleService.update(sysRole);</span><br><span class="line">        <span class="keyword">return</span> ResultGenerator.genSuccessResult();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p><strong>4.组序列的使用：</strong></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//指定组的验证顺序，前面组验证不通过的，后面组不进行验证</span></span><br><span class="line"><span class="meta">@GroupSequence</span>(&#123;RoleAdd.class, RoleUpdate.class, Default.class&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">GroupOrder</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="常见的注解："><a href="#常见的注解：" class="headerlink" title="常见的注解："></a>常见的注解：</h2><blockquote><p>所有注解均有message这个参数，即你需要返回或捕获的内容</p><ul><li><code>@Null(message=&quot;&quot;)</code>   被注释的元素必须为 null     </li><li><code>@NotNull</code>   被注释的元素必须不为 null     </li><li><code>@AssertTrue</code>     被注释的元素必须为 true     </li><li><code>@AssertFalse</code>    被注释的元素必须为 false     </li><li><code>@Min(value)</code>     被注释的元素必须是一个数字，其值必须大于等于指定的最小值     </li><li><code>@Max(value)</code>    被注释的元素必须是一个数字，其值必须小于等于指定的最大值     </li><li><code>@DecimalMin(value)</code>  被注释的元素必须是一个数字，其值必须大于等于指定的最小值     </li><li><code>@DecimalMax(value)</code>  被注释的元素必须是一个数字，其值必须小于等于指定的最大值     </li><li><code>@Size(max=, min=)</code>   被注释的元素的大小必须在指定的范围内     </li><li><code>@Digits (integer, fraction)</code>     被注释的元素必须是一个数字，其值必须在可接受的范围内     </li><li><code>@Past</code>   被注释的元素必须是一个过去的日期     </li><li><code>@Future</code>    被注释的元素必须是一个将来的日期     </li><li><code>@Pattern(regex=,flag=)</code>  被注释的元素必须符合指定的正则表达式     </li><li><code>@Email</code>  被注释的元素必须是电子邮箱地址     </li><li><code>@Length(min=,max=)</code>  被注释的字符串的大小必须在指定的范围内     </li><li><code>@NotEmpty</code>   被注释的字符串的必须非空     </li><li><code>@Range(min=,max=,message=)</code>  被注释的元素必须在合适的范围内</li></ul></blockquote><h2 id="异常信息处理"><a href="#异常信息处理" class="headerlink" title="异常信息处理"></a>异常信息处理</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span>(exception <span class="keyword">instanceof</span> ConstraintViolationException)&#123;</span><br><span class="line">    ConstraintViolationException exs = (ConstraintViolationException) exception;</span><br><span class="line">    Set&lt;ConstraintViolation&lt;?&gt;&gt; violations = exs.getConstraintViolations();</span><br><span class="line">    <span class="keyword">for</span> (ConstraintViolation&lt;?&gt; item : violations) &#123;</span><br><span class="line">        <span class="comment">//打印验证不通过的信息</span></span><br><span class="line">        System.out.println(item.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Spring-Boot-数据校验框架-springmvc-validator-使用说明&quot;&gt;&lt;a href=&quot;#Spring-Boot-数据校验框架-springmvc-validator-使用说明&quot; class=&quot;headerlink&quot; title=&quot;Spring Boot 数据校验框架 springmvc-validator 使用说明&quot;&gt;&lt;/a&gt;Spring Boot 数据校验框架 springmvc-validator 使用说明&lt;/h1&gt;&lt;h2 id=&quot;使用步骤&quot;&gt;&lt;a href=&quot;#使用步骤&quot; class=&quot;headerlink&quot; title=&quot;使用步骤&quot;&gt;&lt;/a&gt;使用步骤&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;依赖&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;hibernate-validation&lt;/code&gt;,&lt;code&gt;validation-api&lt;/code&gt;已经被添加在&lt;code&gt;spring-boot-starter-web&lt;/code&gt;内，所以不需要添加依赖&lt;/p&gt;
    
    </summary>
    
      <category term="springboot" scheme="https://janche.github.io/categories/springboot/"/>
    
      <category term="springmvc-validator" scheme="https://janche.github.io/categories/springboot/springmvc-validator/"/>
    
    
      <category term="springmvc" scheme="https://janche.github.io/tags/springmvc/"/>
    
      <category term="validator" scheme="https://janche.github.io/tags/validator/"/>
    
  </entry>
  
  <entry>
    <title>随想录</title>
    <link href="https://janche.github.io/2019/04/23/%E9%9A%8F%E6%83%B3%E5%BD%95/"/>
    <id>https://janche.github.io/2019/04/23/随想录/</id>
    <published>2019-04-23T13:17:24.000Z</published>
    <updated>2019-04-26T03:30:36.497Z</updated>
    
    <content type="html"><![CDATA[<p><strong>弦上的博客之第一篇，没有想象中的那么激情澎湃，或许成功喜悦的分量和过程艰辛的程度确是有很大关系，当然这很大程度上得感谢Hexo的开源，感谢我东哥的分享，在今后那些不曾起舞的日子里，愿我能常在此留下点滴的印记。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;弦上的博客之第一篇，没有想象中的那么激情澎湃，或许成功喜悦的分量和过程艰辛的程度确是有很大关系，当然这很大程度上得感谢Hexo的开源，感谢我东哥的分享，在今后那些不曾起舞的日子里，愿我能常在此留下点滴的印记。&lt;/strong&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="日志" scheme="https://janche.github.io/categories/%E6%97%A5%E5%BF%97/"/>
    
    
      <category term="随想录" scheme="https://janche.github.io/tags/%E9%9A%8F%E6%83%B3%E5%BD%95/"/>
    
  </entry>
  
</feed>
